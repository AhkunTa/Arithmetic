// 给定一个大小为 n 的数组，找到其中的多数元素。多数元素是指在数组中出现次数 大于 ⌊ n/2 ⌋ 的元素。

// 你可以假设数组是非空的，并且给定的数组总是存在多数元素。

//

// 示例 1：

// 输入：[3,2,3]
// 输出：3
// 示例 2：

// 输入：[2,2,1,1,1,2,2]
// 输出：2
//

// 进阶：

// 尝试设计时间复杂度为 O(n)、空间复杂度为 O(1) 的算法解决此问题。

// 1 哈希 获取每个元素出现次数 在循环其次数取出大于 n/2的值 就是多数元素的值

// 2 一定存在多数元素 那么排序后的值（不管从小到大还是从大到小排序）中间值一定数多数元素
// 时间 Onlogn 空间O1
var majorityElement = function (nums) {
  nums.sort((a, b) => a - b);
  return nums[Math.floor(nums.length / 2)];
};

// 3 Boyer-Moore 投票算法

// 4 分治法
