// 两个整数之间的汉明距离指的是这两个数字对应二进制位不同的位置的数目。

// 给出两个整数 x 和 y，计算它们之间的汉明距离。

// 注意：
// 0 ≤ x, y < 231.

// 示例:

// 输入: x = 1, y = 4

// 输出: 2

// 解释:
// 1   (0 0 0 1)
// 4   (0 1 0 0)
//        ↑   ↑

// 上面的箭头指出了对应二进制位不同的位置。

// 两个等长字符串之间的汉明距离是两个字符串对应位置的不同字符的个数。
// 换句话说，它就是将一个字符串变换成另外一个字符串所需要替换的字符个数。

// 使用异或
// 将两个数异或 返回的值计算其二进制中1的数目

var hammingDistance = function (x, y) {
  let val = x ^ y;
  let res = 0;

  while (val != 0) {
    if (val % 2) {
      res++;
    }
    val = Math.floor(val / 2);
  }
  return res;
};
